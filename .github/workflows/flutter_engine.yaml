name: Flutter Engine
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
env:
  TAR_OPTIONS: --no-same-owner
jobs:
  Download-Source:
    name: 'Download Engine Source'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
      - name: 'Get Flutter version'
        id: flutter-version
        run: |
          read -r FLUTTER_VERSION < version/flutter.version
          echo "FLUTTER_VERSION=${FLUTTER_VERSION}" >> $GITHUB_OUTPUT
      - name: 'Install depot tools'
        run: |
          git clone \
            --depth 1 \
            https://chromium.googlesource.com/chromium/tools/depot_tools.git \
            ./depot_tools
          rm -rf ./depot_tools/.git
          echo "$GITHUB_WORKSPACE/depot_tools" >> $GITHUB_PATH
      - name: 'Download Flutter Engine source'
        env:
          FLUTTER_VERSION: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
        run: |
          mkdir -p engine
          cp files/dot-gclient ./engine/.gclient
          cd engine
          gclient sync \
            --revision src/flutter@${FLUTTER_VERSION} \
            --delete_unversioned_trees \
            --reset \
            --no-history \
            --shallow
      - name: 'Cache Engine Source'
        uses: actions/cache/save@v4
        id: cache
        with:
          path: |
            depot_tools
            engine
          key: engine-source-${{ steps.flutter-version.outputs.FLUTTER_VERSION }}

  Build-Engine:
    name: 'Build Flutter Engine'
    needs: Download-Source
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        runtime-mode: [debug-unoptimized, debug, profile, release]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
      - name: 'Get Flutter version'
        id: flutter-version
        run: |
          read -r FLUTTER_VERSION < version/flutter.version
          echo "FLUTTER_VERSION=${FLUTTER_VERSION}" >> $GITHUB_OUTPUT
      - name: 'Get depot_tools and engine source'
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            depot_tools
            engine
          key: engine-source-${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
          fail-on-cache-miss: true
      - name: 'Install depot_tools in GITHUB_PATH'
        run: |
          echo "$GITHUB_WORKSPACE/depot_tools" >> $GITHUB_PATH
      - name: 'Configure Flutter Engine'
        working-directory: engine/src
        run: |
          ./flutter/tools/gn \
            ${{ endsWith(matrix.runtime-mode, '-unoptimized') && '--unoptimized' || '' }} \
            --no-enable-unittests \
            --runtime-mode ${{ matrix.runtime-mode == 'debug-unoptimized' && 'debug' || matrix.runtime-mode }} \
            --target-os linux \
            --linux-cpu arm64 \
            --no-goma \
            --embedder-for-target \
            --lto \
            --enable-vulkan \
            --target-dir build \
            --no-build-glfw-shell \
            --no-build-embedder-examples \
            ${{ startsWith(matrix.runtime-mode, 'debug-') && '--no-stripped' || '' }}
      - name: 'Build Flutter Engine'
        working-directory: engine/src/out/build
        run: |
          ninja \
            libflutter_engine.so \
            flutter_embedder.h \
            icudtl.dat
      - name: 'Package artifacts'
        env:
          FLUTTER_VERSION: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
        run: |
          mkdir artifacts
          cp engine/src/out/build/libflutter_engine.so ./artifacts
          cp engine/src/out/build/icudtl.dat ./artifacts
          cp engine/src/out/build/flutter_embedder.h ./artifacts
          cd artifacts
          tar cvJf ../flutter-engine-arm64-${{ matrix.runtime-mode }}-${{ env.FLUTTER_VERSION }}.tar.xz ./*
      - name: 'Upload artifacts'
        env:
          FLUTTER_VERSION: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
        uses: actions/upload-artifact@v4
        with:
          name: flutter-engine-arm64-${{ matrix.runtime-mode }}-${{ env.FLUTTER_VERSION }}.tar.xz
          path: flutter-engine-arm64-${{ matrix.runtime-mode }}-${{ env.FLUTTER_VERSION }}.tar.xz
  Release:
    name: 'Create GitHub Release'
    needs: Build-Engine
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
      - name: 'Download build artifacts'
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: 'Get Flutter version'
        id: flutter-version
        run: |
          read -r FLUTTER_VERSION < version/flutter.version
          echo "FLUTTER_VERSION=${FLUTTER_VERSION}" >> $GITHUB_OUTPUT
          read -r ENGINE_HASH < version/engine.version
          echo "ENGINE_HASH=${ENGINE_HASH}" >> $GITHUB_OUTPUT
      - name: 'Format Release Notes Template'
        env:
          FLUTTER_VERSION: ${{ steps.flutter-version.outputs.FLUTTER_VERSION }}
          ENGINE_HASH: ${{ steps.flutter-version.outputs.ENGINE_HASH }}
        run: |
          sed -i "s/{{FLUTTER_VERSION}}/${{ env.FLUTTER_VERSION}}/g" files/release.md
          sed -i "s/{{ENGINE_HASH}}/${{ env.ENGINE_HASH}}/g" files/release.md
      - name: 'Create GitHub Release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "${tag}" \
            --repo="${GITHUB_REPOSITORY}" \
            --title="Flutter Engine ${tag}" \
            --notes-file files/release.md \
            --latest \
            artifacts/*
